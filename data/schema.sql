CREATE TABLE "USER" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "first_name" varchar(60) NOT NULL,
  "last_name" varchar(60) NOT NULL,
  "email" varchar(100) UNIQUE NOT NULL,
  "phone_number" varchar(20) UNIQUE NOT NULL,
  "passwd_hash" varchar(128) NOT NULL,
  "profile_image_url" varchar(255),
  "mfa_secret" varchar(150),
  "is_mfa_enabled" bool NOT NULL DEFAULT false,
  "preferred_theme" varchar(10) NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "TAG" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) NOT NULL,
  "color_hex" varchar(7) NOT NULL
);

CREATE TABLE "PRIORITY" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50) UNIQUE NOT NULL,
  "level" integer UNIQUE NOT NULL
);

CREATE TABLE "CATEGORY" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(150) NOT NULL
);

CREATE TABLE "TASK_STATE" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50) UNIQUE NOT NULL
);

CREATE TABLE "PROJECT" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(70) UNIQUE NOT NULL,
  "description" text,
  "cover_img_url" varchar(255),
  "mode_of_view" varchar(50) NOT NULL,
  "owner_user_id" integer NOT NULL,
  "category_id" integer,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "TASK" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar(100) NOT NULL,
  "description" text,
  "start_date" timestamp NOT NULL,
  "due_date" timestamp,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now()),
  "user_asign_id" integer,
  "project_id" integer NOT NULL,
  "priority_id" integer NOT NULL,
  "state_id" integer NOT NULL
);

CREATE TABLE "SUBTASK" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar(100) NOT NULL,
  "is_completed" bool NOT NULL DEFAULT false,
  "updated_at" timestamp DEFAULT (now()),
  "task_id" integer NOT NULL
);

CREATE TABLE "PROJECT_MEMBER" (
  "role" varchar(100) NOT NULL DEFAULT 'viewer',
  "user_id" integer NOT NULL,
  "project_id" integer NOT NULL,
  PRIMARY KEY ("user_id", "project_id")
);

CREATE TABLE "TASK_TAG" (
  "task_id" integer NOT NULL,
  "tag_id" integer NOT NULL,
  PRIMARY KEY ("task_id", "tag_id")
);

CREATE TABLE "TASK_COMPLETION" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "completed_at" timestamp NOT NULL,
  "task_id" integer NOT NULL,
  "user_id" integer NOT NULL
);

CREATE TABLE "REMINDER" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "message" text NOT NULL,
  "reminder_at" timestamp NOT NULL,
  "is_sent" bool NOT NULL DEFAULT false,
  "task_id" integer NOT NULL
);

ALTER TABLE "TASK" ADD FOREIGN KEY ("project_id") REFERENCES "PROJECT" ("id");

ALTER TABLE "PROJECT_MEMBER" ADD FOREIGN KEY ("user_id") REFERENCES "USER" ("id") ON DELETE CASCADE;

ALTER TABLE "PROJECT_MEMBER" ADD FOREIGN KEY ("project_id") REFERENCES "PROJECT" ("id") ON DELETE CASCADE;

ALTER TABLE "TASK_TAG" ADD FOREIGN KEY ("task_id") REFERENCES "TASK" ("id") ON DELETE CASCADE;

ALTER TABLE "TASK_TAG" ADD FOREIGN KEY ("tag_id") REFERENCES "TAG" ("id") ON DELETE CASCADE;

ALTER TABLE "TASK_COMPLETION" ADD FOREIGN KEY ("task_id") REFERENCES "TASK" ("id") ON DELETE CASCADE;

ALTER TABLE "SUBTASK" ADD FOREIGN KEY ("task_id") REFERENCES "TASK" ("id") ON DELETE CASCADE;

ALTER TABLE "REMINDER" ADD FOREIGN KEY ("task_id") REFERENCES "TASK" ("id") ON DELETE CASCADE;

ALTER TABLE "TASK_COMPLETION" ADD FOREIGN KEY ("user_id") REFERENCES "USER" ("id");

ALTER TABLE "PROJECT" ADD FOREIGN KEY ("owner_user_id") REFERENCES "USER" ("id");

ALTER TABLE "TASK" ADD FOREIGN KEY ("user_asign_id") REFERENCES "USER" ("id");

ALTER TABLE "PROJECT" ADD FOREIGN KEY ("category_id") REFERENCES "CATEGORY" ("id");

ALTER TABLE "TASK" ADD FOREIGN KEY ("state_id") REFERENCES "TASK_STATE" ("id");

ALTER TABLE "TASK" ADD FOREIGN KEY ("priority_id") REFERENCES "PRIORITY" ("id");
